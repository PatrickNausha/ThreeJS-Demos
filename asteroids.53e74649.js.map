{"mappings":"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","sources":["<anon>","src/asteroids/main.js","src/debug-stats.js","node_modules/stats-js/build/stats.min.js","src/asteroids/movables.js","src/asteroids/explosions.js","src/asteroids/asteroids.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire1287\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire1287\"] = parcelRequire;\n}\n\nvar $eq1Fs = parcelRequire(\"eq1Fs\");\nvar $a07f7f9dd384c0a2$exports = {};\n!function(e, t) {\n    $a07f7f9dd384c0a2$exports = t();\n}($a07f7f9dd384c0a2$exports, function() {\n    \"use strict\";\n    var c = function() {\n        var n = 0, l = document.createElement(\"div\");\n        function e(e) {\n            return l.appendChild(e.dom), e;\n        }\n        function t(e) {\n            for(var t = 0; t < l.children.length; t++)l.children[t].style.display = t === e ? \"block\" : \"none\";\n            n = e;\n        }\n        l.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\", l.addEventListener(\"click\", function(e) {\n            e.preventDefault(), t(++n % l.children.length);\n        }, !1);\n        var i = (performance || Date).now(), a = i, o = 0, f = e(new c.Panel(\"FPS\", \"#0ff\", \"#002\")), r = e(new c.Panel(\"MS\", \"#0f0\", \"#020\"));\n        if (self.performance && self.performance.memory) var d = e(new c.Panel(\"MB\", \"#f08\", \"#201\"));\n        return t(0), {\n            REVISION: 16,\n            dom: l,\n            addPanel: e,\n            showPanel: t,\n            begin: function() {\n                i = (performance || Date).now();\n            },\n            end: function() {\n                o++;\n                var e = (performance || Date).now();\n                if (r.update(e - i, 200), a + 1e3 <= e && (f.update(1e3 * o / (e - a), 100), a = e, o = 0, d)) {\n                    var t = performance.memory;\n                    d.update(t.usedJSHeapSize / 1048576, t.jsHeapSizeLimit / 1048576);\n                }\n                return e;\n            },\n            update: function() {\n                i = this.end();\n            },\n            domElement: l,\n            setMode: t\n        };\n    };\n    return c.Panel = function(n, l, i) {\n        var a = 1 / 0, o = 0, f = Math.round, r = f(window.devicePixelRatio || 1), d = 80 * r, e = 48 * r, c = 3 * r, p = 2 * r, u = 3 * r, s = 15 * r, m = 74 * r, h = 30 * r, y = document.createElement(\"canvas\");\n        y.width = d, y.height = e, y.style.cssText = \"width:80px;height:48px\";\n        var v = y.getContext(\"2d\");\n        return v.font = \"bold \" + 9 * r + \"px Helvetica,Arial,sans-serif\", v.textBaseline = \"top\", v.fillStyle = i, v.fillRect(0, 0, d, e), v.fillStyle = l, v.fillText(n, c, p), v.fillRect(u, s, m, h), v.fillStyle = i, v.globalAlpha = .9, v.fillRect(u, s, m, h), {\n            dom: y,\n            update: function(e, t) {\n                a = Math.min(a, e), o = Math.max(o, e), v.fillStyle = i, v.globalAlpha = 1, v.fillRect(0, 0, d, s), v.fillStyle = l, v.fillText(f(e) + \" \" + n + \" (\" + f(a) + \"-\" + f(o) + \")\", c, p), v.drawImage(y, u + r, s, m - r, h, u, s, m - r, h), v.fillRect(u + m - r, s, r, h), v.fillStyle = i, v.globalAlpha = .9, v.fillRect(u + m - r, s, r, f((1 - e / t) * h));\n            }\n        };\n    }, c;\n});\n\n\nconst $a8fffecac97013f4$var$stats = new (0, (/*@__PURE__*/$parcel$interopDefault($a07f7f9dd384c0a2$exports)))();\n$a8fffecac97013f4$var$stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\nfunction $a8fffecac97013f4$export$f4fa5dfc8595aab7() {\n    $a8fffecac97013f4$var$stats.update();\n}\nlet $a8fffecac97013f4$var$showStats = false;\nfunction $a8fffecac97013f4$export$83c65e7868c10750() {\n    $a8fffecac97013f4$var$showStats = !$a8fffecac97013f4$var$showStats;\n    if ($a8fffecac97013f4$var$showStats) document.body.appendChild($a8fffecac97013f4$var$stats.dom);\n    else $a8fffecac97013f4$var$stats.dom.remove();\n}\n\n\n\nvar $kXZ5p = parcelRequire(\"kXZ5p\");\n\nvar $dJCPM = parcelRequire(\"dJCPM\");\nclass $858725d5e2ef9b1d$export$2b073417fbba3848 {\n    #movables = new Map();\n    add(object3d, velocity, angularVelocity, shouldWrap = false) {\n        if (!object3d) throw new Error(\"object3d parameter is required\");\n        if (!velocity) throw new Error(\"velocity parameter is required\");\n        if (!angularVelocity) throw new Error(\"angularVelocity parameter is required\");\n        this.#movables.set(object3d, {\n            velocity: velocity,\n            angularVelocity: angularVelocity,\n            shouldWrap: shouldWrap\n        });\n    }\n    setAngularVelocity(object3d, angularVelocity) {\n        const movable = this.#movables.get(object3d);\n        if (!movable) {\n            console.error(\"Unknown object\", object3d);\n            throw new Error(\"Unknown object\");\n        }\n        this.#movables.set(object3d, {\n            ...movable,\n            angularVelocity: angularVelocity\n        });\n    }\n    setVelocity(object3d, velocity) {\n        const movable = this.#movables.get(object3d);\n        if (!movable) {\n            console.error(\"Unknown object\", object3d);\n            throw new Error(\"Unknown object\");\n        }\n        this.#movables.set(object3d, {\n            ...movable,\n            velocity: velocity\n        });\n    }\n    getVelocity(object3d) {\n        const movable = this.#movables.get(object3d);\n        if (!movable) {\n            console.error(\"Unknown object\", object3d);\n            throw new Error(\"Unknown object\");\n        }\n        return movable.velocity.clone();\n    }\n    step(timestampDifference, areaBounds) {\n        const { top: top , bottom: bottom , left: left , right: right  } = areaBounds;\n        for (const [object3d, { velocity: velocity , angularVelocity: angularVelocity , shouldWrap: shouldWrap  }] of this.#movables){\n            object3d.rotateX(timestampDifference * angularVelocity.x);\n            object3d.rotateY(timestampDifference * angularVelocity.y);\n            object3d.rotateZ(timestampDifference * angularVelocity.z);\n            const positionDelta = velocity.clone().multiplyScalar(timestampDifference);\n            object3d.position.add(positionDelta);\n            if (shouldWrap) {\n                if (object3d.position.x > right) object3d.position.setX(left);\n                else if (object3d.position.x < left) object3d.position.setX(right);\n                else if (object3d.position.y > top) object3d.position.setY(bottom);\n                else if (object3d.position.y < bottom) object3d.position.setY(top);\n            }\n        }\n    }\n}\n\n\n\nvar $eq1Fs = parcelRequire(\"eq1Fs\");\nconst $05d2cb2914b1a9ca$var$spriteCount = 20;\n// https://sfxr.me/#7BMHBGBrvPrKMz7vdnH2arTppbTGtPrik6ypYCJazirRsGBVeid2uaLtz37CSy69ZJjGJ7C8h9NjU1LRXtL5tgW9vaPUQvE92L3q7UfV4TSbUF1N2G3urTRqZ\n// https://sfxr.me/#7BMHBGBrvPrKMz7vdnH2arSxENYbWUNps8g7nqouBB9smtxAq2PYYsVoa5sjrzVZo7VNpDFNrSQTNtinkTFut1aGJnuigdFUTrtf7aaih5chRw6UQ5bBqVNz3\nconst $05d2cb2914b1a9ca$var$explosionAudios = [\n    new Audio(\"./assets/audio/explosion-3.wav\"),\n    new Audio(\"./assets/audio/explosion-4.wav\"),\n    new Audio(\"./assets/audio/explosion-3.wav\"),\n    new Audio(\"./assets/audio/explosion-4.wav\")\n];\nclass $05d2cb2914b1a9ca$export$aacb1b2924a5a7b7 {\n    #sprites = [];\n    #nextSpriteIndex = 0;\n    initialize(scene, explosionTexture, fps, horizontalTileCount, verticalTileCount) {\n        this.#sprites = Array.from({\n            length: $05d2cb2914b1a9ca$var$spriteCount\n        }).map(()=>new $05d2cb2914b1a9ca$var$AnimatedSprite(explosionTexture, fps, horizontalTileCount, verticalTileCount));\n        for (const sprite of this.#sprites){\n            const threeSprite = sprite.getObject3d();\n            threeSprite.visible = false;\n            scene.add(threeSprite);\n        }\n    }\n    explode(position, scale) {\n        const sprite = this.#sprites[this.#nextSpriteIndex % this.#sprites.length];\n        sprite.restart();\n        const threeJsSprite = sprite.getObject3d();\n        threeJsSprite.position.copy(position);\n        threeJsSprite.scale.set(scale, scale, 1);\n        this.#nextSpriteIndex++;\n        $05d2cb2914b1a9ca$var$explosionAudios[this.#nextSpriteIndex % $05d2cb2914b1a9ca$var$explosionAudios.length].play();\n    }\n    step(deltaSeconds) {\n        for (const sprite of this.#sprites)sprite.step(deltaSeconds);\n    }\n}\nclass $05d2cb2914b1a9ca$var$AnimatedSprite {\n    #elapsedTime = 0;\n    #horizontalTileCount;\n    #verticalTileCount;\n    #sprite;\n    #fps = 0;\n    constructor(spriteSheetTexture, fps, horizontalTileCount, verticalTileCount){\n        this.#fps = fps;\n        const texture = spriteSheetTexture.clone();\n        texture.needsUpdate = true;\n        texture.wrapS = texture.wrapT = (0, $eq1Fs.RepeatWrapping);\n        this.#horizontalTileCount = horizontalTileCount;\n        this.#verticalTileCount = verticalTileCount;\n        texture.repeat.set(1 / this.#horizontalTileCount, 1 / this.#verticalTileCount);\n        const spriteMaterial = new (0, $eq1Fs.SpriteMaterial)({\n            map: texture,\n            alphaMap: texture,\n            blending: (0, $eq1Fs.AdditiveBlending),\n            color: 0xffffff\n        });\n        this.#sprite = new (0, $eq1Fs.Sprite)(spriteMaterial);\n    }\n    getObject3d() {\n        return this.#sprite;\n    }\n    restart() {\n        this.#elapsedTime = 0;\n        this.#sprite.visible = true;\n    }\n    step(deltaSeconds) {\n        if (!this.#sprite.visible) return;\n        this.#elapsedTime += deltaSeconds;\n        const currentFrame = Math.floor(this.#elapsedTime * this.#fps);\n        const frameCount = this.#verticalTileCount * this.#horizontalTileCount;\n        if (currentFrame >= frameCount) this.#sprite.visible = false;\n        else {\n            const horizontalTileIndex = currentFrame % this.#horizontalTileCount;\n            const verticalTileIndex = Math.floor(currentFrame / this.#horizontalTileCount);\n            const texture = this.#sprite.material.map;\n            texture.offset.setX(horizontalTileIndex / this.#horizontalTileCount);\n            texture.offset.setY(-(1 + verticalTileIndex) / this.#verticalTileCount);\n        }\n    }\n}\n\n\n\nvar $eq1Fs = parcelRequire(\"eq1Fs\");\nconst $65c65aaebef2a5cf$var$asteroidRadius = 10;\nlet $65c65aaebef2a5cf$var$asteroids = [];\nlet $65c65aaebef2a5cf$var$largeAsteroids = [];\nlet $65c65aaebef2a5cf$var$currentSmallAsteroid = 0;\nlet $65c65aaebef2a5cf$var$smallAsteroids = [];\nlet $65c65aaebef2a5cf$var$currentSmallerAsteroid = 0;\nlet $65c65aaebef2a5cf$var$smallerAsteroids = [];\nfunction $65c65aaebef2a5cf$export$bcde01423ce26deb(asteroidGltf, movables, scene) {\n    const largeAsteroidCount = 6;\n    const smallAsteroidCount = largeAsteroidCount * 2;\n    const smallerAsteroidCount = smallAsteroidCount * 2;\n    const largeAsteroidMeshes = asteroidGltf.scene.children.filter(({ userData: userData  })=>userData.name.startsWith(\"asteroid-large-\"));\n    const smallAsteroidMeshes = asteroidGltf.scene.children.filter(({ userData: userData  })=>userData.name.startsWith(\"asteroid-small-\"));\n    const smallerAsteroidMeshes = asteroidGltf.scene.children.filter(({ userData: userData  })=>userData.name.startsWith(\"asteroid-smaller-\"));\n    $65c65aaebef2a5cf$var$largeAsteroids = Array.from({\n        length: largeAsteroidCount\n    }).map((_, index)=>{\n        const asteroidMeshCopy = largeAsteroidMeshes[index % largeAsteroidMeshes.length].clone();\n        scene.add(asteroidMeshCopy);\n        asteroidMeshCopy.visible = false;\n        const velocity = new (0, $eq1Fs.Vector3)(20, 0, 0);\n        velocity.applyAxisAngle(new (0, $eq1Fs.Vector3)(0, 0, 1), 2 * Math.PI * Math.random());\n        movables.add(asteroidMeshCopy, velocity, new (0, $eq1Fs.Vector3)(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1), true);\n        return asteroidMeshCopy;\n    });\n    $65c65aaebef2a5cf$var$smallAsteroids = Array.from({\n        length: smallAsteroidCount\n    }).map((_, index)=>{\n        const asteroidMeshCopy = smallAsteroidMeshes[index % smallAsteroidMeshes.length].clone();\n        scene.add(asteroidMeshCopy);\n        asteroidMeshCopy.visible = false;\n        movables.add(asteroidMeshCopy, new (0, $eq1Fs.Vector3)(0, 0, 0), new (0, $eq1Fs.Vector3)(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1), true);\n        return asteroidMeshCopy;\n    });\n    $65c65aaebef2a5cf$var$smallerAsteroids = Array.from({\n        length: smallerAsteroidCount\n    }).map((_, index)=>{\n        const asteroidMeshCopy = smallerAsteroidMeshes[index % smallerAsteroidMeshes.length].clone();\n        scene.add(asteroidMeshCopy);\n        asteroidMeshCopy.visible = false;\n        movables.add(asteroidMeshCopy, new (0, $eq1Fs.Vector3)(0, 0, 0), new (0, $eq1Fs.Vector3)(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1), true);\n        return asteroidMeshCopy;\n    });\n    $65c65aaebef2a5cf$var$asteroids = [\n        ...$65c65aaebef2a5cf$var$smallerAsteroids,\n        ...$65c65aaebef2a5cf$var$smallAsteroids,\n        ...$65c65aaebef2a5cf$var$largeAsteroids\n    ];\n}\nfunction $65c65aaebef2a5cf$export$53df6cfe269c0b27() {\n    return $65c65aaebef2a5cf$var$asteroids.some((asteroid)=>asteroid.visible);\n}\nfunction $65c65aaebef2a5cf$export$720cadecf6b2b14c(areaBounds) {\n    const gameAreaWidthMeters = areaBounds.right - areaBounds.left;\n    const gameAreaHeightMeters = areaBounds.top - areaBounds.bottom;\n    for (const asteroid of $65c65aaebef2a5cf$var$largeAsteroids){\n        asteroid.visible = true;\n        const startLocations = [\n            // Top of screen\n            [\n                (Math.random() - 0.5) * gameAreaWidthMeters,\n                areaBounds.top\n            ],\n            // Bottom of screen\n            [\n                (Math.random() - 0.5) * gameAreaWidthMeters,\n                areaBounds.bottom\n            ],\n            // Left of screen\n            [\n                areaBounds.left,\n                (Math.random() - 0.5) * gameAreaHeightMeters\n            ],\n            // Right of screen\n            [\n                areaBounds.right,\n                (Math.random() - 0.5) * gameAreaHeightMeters\n            ]\n        ];\n        const startLocation = startLocations[Math.floor(Math.random() * startLocations.length)];\n        asteroid.position.set(startLocation[0], startLocation[1], 0);\n    }\n}\nconst $65c65aaebef2a5cf$export$e03da3acd1fa77d1 = 0;\nconst $65c65aaebef2a5cf$export$8550cd7fffada19a = 1;\nconst $65c65aaebef2a5cf$export$cb15944939c53b38 = 2;\nfunction $65c65aaebef2a5cf$export$ca689c4842ba8606(asteroid, movables) {\n    asteroid.visible = false;\n    if ($65c65aaebef2a5cf$var$largeAsteroids.includes(asteroid)) {\n        $65c65aaebef2a5cf$var$emitSmallAsteroid(asteroid.position.clone(), movables);\n        $65c65aaebef2a5cf$var$emitSmallAsteroid(asteroid.position.clone(), movables);\n        return $65c65aaebef2a5cf$export$e03da3acd1fa77d1;\n    } else if ($65c65aaebef2a5cf$var$smallAsteroids.includes(asteroid)) {\n        $65c65aaebef2a5cf$var$emitSmallerAsteroid(asteroid.position.clone(), movables);\n        $65c65aaebef2a5cf$var$emitSmallerAsteroid(asteroid.position.clone(), movables);\n        return $65c65aaebef2a5cf$export$8550cd7fffada19a;\n    }\n    return $65c65aaebef2a5cf$export$cb15944939c53b38;\n}\nfunction $65c65aaebef2a5cf$export$2feb396e0d76958d(spaceCraftPosition) {\n    for (const asteroid of $65c65aaebef2a5cf$var$asteroids.filter(({ visible: visible  })=>visible)){\n        if (spaceCraftPosition.distanceTo(asteroid.position) < $65c65aaebef2a5cf$var$asteroidRadius) return true;\n    }\n    return false;\n}\nconst $65c65aaebef2a5cf$var$maxAsteroidSize = 20;\nfunction $65c65aaebef2a5cf$export$82dc7e80e10d4793(bulletPosition, bulletVelocity) {\n    const visibleAsteroids = $65c65aaebef2a5cf$var$asteroids.filter(({ visible: visible  })=>visible);\n    const nearAsteroids = visibleAsteroids.filter(({ position: position  })=>bulletPosition.distanceTo(position) < $65c65aaebef2a5cf$var$maxAsteroidSize);\n    const direction = bulletVelocity.clone().normalize();\n    const origin = new (0, $eq1Fs.Vector3)().subVectors(bulletPosition, direction);\n    const ray = new (0, $eq1Fs.Raycaster)(origin, direction, 0, 2);\n    const collisionResults = ray.intersectObjects(nearAsteroids);\n    return collisionResults;\n}\nfunction $65c65aaebef2a5cf$var$emitSmallAsteroid(position, movables) {\n    const asteroid = $65c65aaebef2a5cf$var$smallAsteroids[$65c65aaebef2a5cf$var$currentSmallAsteroid % $65c65aaebef2a5cf$var$smallAsteroids.length];\n    $65c65aaebef2a5cf$var$currentSmallAsteroid++;\n    asteroid.visible = true;\n    asteroid.position.copy(position);\n    const velocity = new (0, $eq1Fs.Vector3)(30, 0, 0);\n    velocity.applyAxisAngle(new (0, $eq1Fs.Vector3)(0, 0, 1), 2 * Math.PI * Math.random());\n    movables.setVelocity(asteroid, velocity);\n}\nfunction $65c65aaebef2a5cf$var$emitSmallerAsteroid(position, movables) {\n    const asteroid = $65c65aaebef2a5cf$var$smallerAsteroids[$65c65aaebef2a5cf$var$currentSmallerAsteroid % $65c65aaebef2a5cf$var$smallerAsteroids.length];\n    $65c65aaebef2a5cf$var$currentSmallerAsteroid++;\n    asteroid.visible = true;\n    asteroid.position.copy(position);\n    const velocity = new (0, $eq1Fs.Vector3)(40, 0, 0);\n    velocity.applyAxisAngle(new (0, $eq1Fs.Vector3)(0, 0, 1), 2 * Math.PI * Math.random());\n    movables.setVelocity(asteroid, velocity);\n}\n\n\n// Gameplay notes\n// First level has 4 asteroids\n// Second level has 6 asteroids\n// Third level has 8 asteroids\n// Fourth level has 10 asteroids\n// Ship location does not reset\n// Sometimes when asteroid splits, smaller pieces are perfectly overlapping.\n// Rocks have varying velocities\n// Rocks spawn near edge of screen\n// TODO:\n// * Make asteroids not overlap on Z axis\n// * Tune initial placement of asteroids (study original game)\n// * Tune velocity of asteroids to match original game\n// * Bake normals onto low-poly meshes\n// * Add thrust\n// * Add real collision detection\n// * Fix bug where one bullet can take out multiple asteroids\n// * Add explosion sounds\n// * Make lasers look cool. Add lights to them?\n// * Handle game over scenario. Make \"loaded\" bullets not collide with asteroids.\n// * Add hyperspace\n// * Add UFO\n// * Add asteroid motion trail\nconst $fed252b883bd88fa$var$ambientLightColor = 0x111111;\nconst $fed252b883bd88fa$var$aspectRatio = 4 / 3;\nconst $fed252b883bd88fa$var$renderer = new (0, $eq1Fs.WebGLRenderer)({\n    antialias: true\n});\n$fed252b883bd88fa$var$renderer.outputEncoding = (0, $eq1Fs.sRGBEncoding);\n$fed252b883bd88fa$var$renderer.setClearColor($fed252b883bd88fa$var$ambientLightColor);\n$fed252b883bd88fa$var$renderer.setPixelRatio(window.devicePixelRatio || 1);\ndocument.body.appendChild($fed252b883bd88fa$var$renderer.domElement);\nconst $fed252b883bd88fa$var$scene = new (0, $eq1Fs.Scene)();\nconst $fed252b883bd88fa$var$movables = new (0, $858725d5e2ef9b1d$export$2b073417fbba3848)();\nconst $fed252b883bd88fa$var$explosions = new (0, $05d2cb2914b1a9ca$export$aacb1b2924a5a7b7)();\n// Camera\nconst $fed252b883bd88fa$var$viewportHeightMeters = 320;\nconst $fed252b883bd88fa$var$viewportWidthMeters = $fed252b883bd88fa$var$aspectRatio * $fed252b883bd88fa$var$viewportHeightMeters;\nconst $fed252b883bd88fa$var$camera = new (0, $eq1Fs.OrthographicCamera)(-$fed252b883bd88fa$var$viewportWidthMeters / 2, $fed252b883bd88fa$var$viewportWidthMeters / 2, $fed252b883bd88fa$var$viewportHeightMeters / 2, -$fed252b883bd88fa$var$viewportHeightMeters / 2);\n$fed252b883bd88fa$var$camera.position.z = 100;\nconst $fed252b883bd88fa$var$areaBounds = {\n    top: $fed252b883bd88fa$var$camera.top,\n    bottom: $fed252b883bd88fa$var$camera.bottom,\n    left: $fed252b883bd88fa$var$camera.left,\n    right: $fed252b883bd88fa$var$camera.right\n};\nconst $fed252b883bd88fa$var$gltfLoader = new (0, $kXZ5p.GLTFLoader)().setPath(\"./assets/models/\");\nfunction $fed252b883bd88fa$var$promisifiedGltfLoad(path) {\n    return new Promise((resolve, reject)=>{\n        $fed252b883bd88fa$var$gltfLoader.load(path, resolve);\n    });\n}\nconst $fed252b883bd88fa$var$textureLoader = new (0, $eq1Fs.TextureLoader)().setPath(\"./assets/textures/\");\nfunction $fed252b883bd88fa$var$promisifiedTextureLoad(path) {\n    return new Promise((resolve, reject)=>{\n        $fed252b883bd88fa$var$textureLoader.load(path, resolve);\n    });\n}\nlet $fed252b883bd88fa$var$spaceCraft = null;\n(async function load() {\n    const [spaceCraftGltf, rockGltf, explosionTexture, laserTexture] = await Promise.all([\n        $fed252b883bd88fa$var$promisifiedGltfLoad(\"asteroids-spacecraft.gltf\"),\n        $fed252b883bd88fa$var$promisifiedGltfLoad(\"asteroids-scene.gltf\"),\n        $fed252b883bd88fa$var$promisifiedTextureLoad(\"explosion-sprite.png\"),\n        $fed252b883bd88fa$var$promisifiedTextureLoad(\"laser-sprite.png\")\n    ]);\n    $fed252b883bd88fa$var$spaceCraft = spaceCraftGltf.scene;\n    $fed252b883bd88fa$var$scene.add($fed252b883bd88fa$var$spaceCraft);\n    $fed252b883bd88fa$var$movables.add($fed252b883bd88fa$var$spaceCraft, new (0, $eq1Fs.Vector3)(0, 0, 0), new (0, $eq1Fs.Vector3)(0, 0, 0));\n    $fed252b883bd88fa$var$explosions.initialize($fed252b883bd88fa$var$scene, explosionTexture, 30, 4, 4);\n    (0, $65c65aaebef2a5cf$export$bcde01423ce26deb)(rockGltf, $fed252b883bd88fa$var$movables, $fed252b883bd88fa$var$scene);\n    (0, $65c65aaebef2a5cf$export$720cadecf6b2b14c)($fed252b883bd88fa$var$areaBounds);\n    $fed252b883bd88fa$var$initializeBullets(laserTexture);\n})();\nconst $fed252b883bd88fa$var$guiParams = {\n    debugLights: true,\n    light0: true,\n    light1: true,\n    light2: true,\n    animateLights: true,\n    model: \"sphere\"\n};\nconst $fed252b883bd88fa$var$gui = new (0, $dJCPM.GUI)();\n$fed252b883bd88fa$var$gui.add($fed252b883bd88fa$var$guiParams, \"light0\").onChange((value)=>{\n    $fed252b883bd88fa$var$whiteLight.visible = value;\n});\n$fed252b883bd88fa$var$gui.add($fed252b883bd88fa$var$guiParams, \"light1\").onChange((value)=>{\n    $fed252b883bd88fa$var$blueLight.visible = value;\n});\n$fed252b883bd88fa$var$gui.add($fed252b883bd88fa$var$guiParams, \"light2\").onChange((value)=>{\n    $fed252b883bd88fa$var$orangeLight.visible = value;\n});\n(0, $a8fffecac97013f4$export$83c65e7868c10750)();\nconst $fed252b883bd88fa$var$bullets = [];\nfunction $fed252b883bd88fa$var$initializeBullets(texture) {\n    $fed252b883bd88fa$var$bullets.push(...Array.from({\n        length: 10\n    }).map(()=>{\n        const laserMaterial = new (0, $eq1Fs.SpriteMaterial)({\n            map: texture,\n            alphaMap: texture,\n            blending: (0, $eq1Fs.AdditiveBlending),\n            color: 0xffffff\n        });\n        const sprite = new (0, $eq1Fs.Sprite)(laserMaterial);\n        sprite.visible = false;\n        return sprite;\n    }));\n    for (const bullet of $fed252b883bd88fa$var$bullets){\n        bullet.scale.set(8, 8, 1);\n        $fed252b883bd88fa$var$scene.add(bullet);\n        $fed252b883bd88fa$var$movables.add(bullet, new (0, $eq1Fs.Vector3)(0, 0, 0), new (0, $eq1Fs.Vector3)(0, 0, 0));\n    }\n}\nconst $fed252b883bd88fa$var$timeForBulletToTravelScreenVertically = 1.5; // seconds\nconst $fed252b883bd88fa$var$shotSpeed = $fed252b883bd88fa$var$viewportHeightMeters / $fed252b883bd88fa$var$timeForBulletToTravelScreenVertically;\nconst $fed252b883bd88fa$var$rotationSpeed = 3.0;\nconst $fed252b883bd88fa$var$explosionSizeByAsteroidSize = {\n    [(0, $65c65aaebef2a5cf$export$e03da3acd1fa77d1)]: 64,\n    [(0, $65c65aaebef2a5cf$export$8550cd7fffada19a)]: 48,\n    [(0, $65c65aaebef2a5cf$export$cb15944939c53b38)]: 24\n};\nfunction $fed252b883bd88fa$var$step(timestampDifference) {\n    if (!(0, $65c65aaebef2a5cf$export$53df6cfe269c0b27)()) (0, $65c65aaebef2a5cf$export$720cadecf6b2b14c)($fed252b883bd88fa$var$areaBounds);\n    if ($fed252b883bd88fa$var$spaceCraft.visible) {\n        if ($fed252b883bd88fa$var$keyStates[\"ArrowLeft\"]) $fed252b883bd88fa$var$movables.setAngularVelocity($fed252b883bd88fa$var$spaceCraft, new (0, $eq1Fs.Vector3)(0, 0, $fed252b883bd88fa$var$rotationSpeed));\n        else if ($fed252b883bd88fa$var$keyStates[\"ArrowRight\"]) $fed252b883bd88fa$var$movables.setAngularVelocity($fed252b883bd88fa$var$spaceCraft, new (0, $eq1Fs.Vector3)(0, 0, -$fed252b883bd88fa$var$rotationSpeed));\n        else $fed252b883bd88fa$var$movables.setAngularVelocity($fed252b883bd88fa$var$spaceCraft, new (0, $eq1Fs.Vector3)(0, 0, 0));\n        if ($fed252b883bd88fa$var$keyStates[\"Space\"]) {\n            const position = new (0, $eq1Fs.Vector3)(0, 5, -1);\n            position.applyMatrix4($fed252b883bd88fa$var$spaceCraft.matrix);\n            $fed252b883bd88fa$var$fireBullet(position, $fed252b883bd88fa$var$spaceCraft.rotation.clone());\n        }\n    }\n    $fed252b883bd88fa$var$movables.step(timestampDifference, $fed252b883bd88fa$var$areaBounds);\n    $fed252b883bd88fa$var$explosions.step(timestampDifference);\n    for (const bullet of $fed252b883bd88fa$var$bullets.filter(({ visible: visible  })=>visible)){\n        // Detect collisions\n        const asteroidCollisions = (0, $65c65aaebef2a5cf$export$82dc7e80e10d4793)(bullet.position, $fed252b883bd88fa$var$movables.getVelocity(bullet));\n        if (asteroidCollisions.length) {\n            // Put bullet back in gun\n            bullet.position.set(0, 0, 0);\n            bullet.visible = false;\n            $fed252b883bd88fa$var$movables.setVelocity(bullet, new (0, $eq1Fs.Vector3)(0, 0, 0));\n        }\n        for (const { object: object  } of asteroidCollisions){\n            const asteroidSize = (0, $65c65aaebef2a5cf$export$ca689c4842ba8606)(object, $fed252b883bd88fa$var$movables);\n            const explosionPosition = object.position.clone();\n            explosionPosition.setZ(10);\n            $fed252b883bd88fa$var$explosions.explode(explosionPosition, $fed252b883bd88fa$var$explosionSizeByAsteroidSize[asteroidSize]);\n        }\n    }\n    if ($fed252b883bd88fa$var$spaceCraft.visible && (0, $65c65aaebef2a5cf$export$2feb396e0d76958d)($fed252b883bd88fa$var$spaceCraft.position)) {\n        $fed252b883bd88fa$var$explosions.explode($fed252b883bd88fa$var$spaceCraft.position, 32);\n        $fed252b883bd88fa$var$spaceCraft.visible = false;\n    }\n}\nconst $fed252b883bd88fa$var$keyStates = {};\nwindow.document.addEventListener(\"keydown\", (event)=>{\n    $fed252b883bd88fa$var$keyStates[event.code] = true;\n});\nwindow.document.addEventListener(\"keyup\", (event)=>{\n    $fed252b883bd88fa$var$keyStates[event.code] = false;\n});\nconst $fed252b883bd88fa$var$whiteLight = new (0, $eq1Fs.DirectionalLight)(0xffffff, 1);\n$fed252b883bd88fa$var$whiteLight.position.set(1, 1, 2);\n$fed252b883bd88fa$var$scene.add($fed252b883bd88fa$var$whiteLight);\nconst $fed252b883bd88fa$var$orangeLight = new (0, $eq1Fs.DirectionalLight)(0xff7700, 0.5);\n$fed252b883bd88fa$var$orangeLight.position.set(1, -2, 0.5);\n$fed252b883bd88fa$var$scene.add($fed252b883bd88fa$var$orangeLight);\nconst $fed252b883bd88fa$var$blueLight = new (0, $eq1Fs.DirectionalLight)(0x0077ff, 0.5);\n$fed252b883bd88fa$var$blueLight.position.set(-1, 1, 0.5);\n$fed252b883bd88fa$var$scene.add($fed252b883bd88fa$var$blueLight);\n// Main loop\nlet $fed252b883bd88fa$var$lastTimestamp;\nconst $fed252b883bd88fa$var$maxStepSizeMs = 10;\nconst $fed252b883bd88fa$var$maxTotalStepsMs = 100; // Just let it slow down so it can catch up\nfunction $fed252b883bd88fa$var$animate(timestamp) {\n    const timestampDifference = Math.min(timestamp - $fed252b883bd88fa$var$lastTimestamp, $fed252b883bd88fa$var$maxTotalStepsMs);\n    requestAnimationFrame($fed252b883bd88fa$var$animate);\n    if (!$fed252b883bd88fa$var$spaceCraft) // Wait for assets to load.\n    return;\n    if ($fed252b883bd88fa$var$lastTimestamp) {\n        let remainingStepMs = timestampDifference;\n        while(remainingStepMs > 0){\n            const stepMs = Math.min($fed252b883bd88fa$var$maxStepSizeMs, remainingStepMs);\n            $fed252b883bd88fa$var$step(stepMs / 1000);\n            remainingStepMs -= stepMs;\n        }\n    }\n    $fed252b883bd88fa$var$renderer.render($fed252b883bd88fa$var$scene, $fed252b883bd88fa$var$camera);\n    (0, $a8fffecac97013f4$export$f4fa5dfc8595aab7)();\n    $fed252b883bd88fa$var$lastTimestamp = timestamp;\n}\n$fed252b883bd88fa$var$animate();\nlet $fed252b883bd88fa$var$nextBulletIndex = 0;\nlet $fed252b883bd88fa$var$isCoolingDown = false;\n// Avoid pushing up sounds for now and annoying myself with the same noise over and over\n// const audio = null;\nconst $fed252b883bd88fa$var$audio = new Audio(\"./assets/audio/laser-noise-2.wav\");\nfunction $fed252b883bd88fa$var$fireBullet(position, rotation) {\n    if ($fed252b883bd88fa$var$isCoolingDown) return;\n    $fed252b883bd88fa$var$isCoolingDown = true;\n    setTimeout(()=>{\n        $fed252b883bd88fa$var$isCoolingDown = false;\n    }, 250);\n    const velocity = new (0, $eq1Fs.Vector3)(0, $fed252b883bd88fa$var$shotSpeed, 0);\n    velocity.applyEuler(rotation);\n    $fed252b883bd88fa$var$bullets[$fed252b883bd88fa$var$nextBulletIndex].position.copy(position);\n    $fed252b883bd88fa$var$bullets[$fed252b883bd88fa$var$nextBulletIndex].material.rotation = rotation.z;\n    $fed252b883bd88fa$var$bullets[$fed252b883bd88fa$var$nextBulletIndex].visible = true;\n    $fed252b883bd88fa$var$movables.setVelocity($fed252b883bd88fa$var$bullets[$fed252b883bd88fa$var$nextBulletIndex], velocity);\n    $fed252b883bd88fa$var$nextBulletIndex = ($fed252b883bd88fa$var$nextBulletIndex + 1) % $fed252b883bd88fa$var$bullets.length;\n    if ($fed252b883bd88fa$var$audio) {\n        $fed252b883bd88fa$var$audio.pause();\n        $fed252b883bd88fa$var$audio.currentTime = 0;\n        $fed252b883bd88fa$var$audio.play();\n    }\n}\nfunction $fed252b883bd88fa$var$resizeWindow() {\n    const height = window.innerHeight;\n    const width = window.innerHeight * $fed252b883bd88fa$var$aspectRatio;\n    $fed252b883bd88fa$var$renderer.setSize(width, height);\n    $fed252b883bd88fa$var$camera.aspect = window.innerWidth / window.innerHeight;\n    $fed252b883bd88fa$var$camera.updateProjectionMatrix();\n}\n$fed252b883bd88fa$var$resizeWindow();\nwindow.addEventListener(\"resize\", $fed252b883bd88fa$var$resizeWindow);\n\n\n//# sourceMappingURL=asteroids.53e74649.js.map\n","import {\n\tScene,\n\tWebGLRenderer,\n\tSprite,\n\tOrthographicCamera,\n\tDirectionalLight,\n\tSpriteMaterial,\n\tTextureLoader,\n\tAdditiveBlending,\n\tsRGBEncoding,\n} from \"three\";\nimport { updateStats, toggleStats } from \"../debug-stats\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { GUI } from \"dat.gui\";\nimport { Vector3 } from \"three\";\nimport { Movables } from \"./movables\";\nimport { Explosions } from \"./explosions\";\nimport {\n\tcreateAsteroids,\n\tresetAsteroids,\n\tdetectBulletCollisions,\n\texplodeAsteroid,\n\tareAnyAsteroidsLeft,\n\tasteroidSizeLarge,\n\tasteroidSizeSmall,\n\tasteroidSizeSmaller,\n\tdetectSpaceCraftCollision,\n} from \"./asteroids\";\n\n// Gameplay notes\n// First level has 4 asteroids\n// Second level has 6 asteroids\n// Third level has 8 asteroids\n// Fourth level has 10 asteroids\n// Ship location does not reset\n// Sometimes when asteroid splits, smaller pieces are perfectly overlapping.\n// Rocks have varying velocities\n// Rocks spawn near edge of screen\n\n// TODO:\n// * Make asteroids not overlap on Z axis\n// * Tune initial placement of asteroids (study original game)\n// * Tune velocity of asteroids to match original game\n// * Bake normals onto low-poly meshes\n// * Add thrust\n// * Add real collision detection\n// * Fix bug where one bullet can take out multiple asteroids\n// * Add explosion sounds\n// * Make lasers look cool. Add lights to them?\n// * Handle game over scenario. Make \"loaded\" bullets not collide with asteroids.\n// * Add hyperspace\n// * Add UFO\n// * Add asteroid motion trail\n\nconst ambientLightColor = 0x111111;\nconst aspectRatio = 4 / 3;\n\nconst renderer = new WebGLRenderer({ antialias: true });\nrenderer.outputEncoding = sRGBEncoding;\nrenderer.setClearColor(ambientLightColor);\nrenderer.setPixelRatio(window.devicePixelRatio || 1);\ndocument.body.appendChild(renderer.domElement);\n\nconst scene = new Scene();\nconst movables = new Movables();\nconst explosions = new Explosions();\n\n// Camera\nconst viewportHeightMeters = 320;\nconst viewportWidthMeters = aspectRatio * viewportHeightMeters;\nconst camera = new OrthographicCamera(\n\t-viewportWidthMeters / 2,\n\tviewportWidthMeters / 2,\n\tviewportHeightMeters / 2,\n\t-viewportHeightMeters / 2\n);\ncamera.position.z = 100;\n\nconst areaBounds = {\n\ttop: camera.top,\n\tbottom: camera.bottom,\n\tleft: camera.left,\n\tright: camera.right,\n};\n\nconst gltfLoader = new GLTFLoader().setPath(\"./assets/models/\");\nfunction promisifiedGltfLoad(path) {\n\treturn new Promise((resolve, reject) => {\n\t\tgltfLoader.load(path, resolve);\n\t});\n}\n\nconst textureLoader = new TextureLoader().setPath(\"./assets/textures/\");\nfunction promisifiedTextureLoad(path) {\n\treturn new Promise((resolve, reject) => {\n\t\ttextureLoader.load(path, resolve);\n\t});\n}\n\nlet spaceCraft = null;\n(async function load() {\n\tconst [spaceCraftGltf, rockGltf, explosionTexture, laserTexture] = await Promise.all([\n\t\tpromisifiedGltfLoad(\"asteroids-spacecraft.gltf\"),\n\t\tpromisifiedGltfLoad(\"asteroids-scene.gltf\"),\n\t\tpromisifiedTextureLoad(\"explosion-sprite.png\"),\n\t\tpromisifiedTextureLoad(\"laser-sprite.png\"),\n\t]);\n\n\tspaceCraft = spaceCraftGltf.scene;\n\tscene.add(spaceCraft);\n\tmovables.add(spaceCraft, new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n\n\texplosions.initialize(scene, explosionTexture, 30, 4, 4);\n\tcreateAsteroids(rockGltf, movables, scene);\n\tresetAsteroids(areaBounds);\n\tinitializeBullets(laserTexture);\n})();\n\nconst guiParams = {\n\tdebugLights: true,\n\tlight0: true,\n\tlight1: true,\n\tlight2: true,\n\tanimateLights: true,\n\tmodel: \"sphere\",\n};\n\nconst gui = new GUI();\ngui.add(guiParams, \"light0\").onChange((value) => {\n\twhiteLight.visible = value;\n});\ngui.add(guiParams, \"light1\").onChange((value) => {\n\tblueLight.visible = value;\n});\ngui.add(guiParams, \"light2\").onChange((value) => {\n\torangeLight.visible = value;\n});\n\ntoggleStats();\n\nconst bullets = [];\nfunction initializeBullets(texture) {\n\tbullets.push(\n\t\t...Array.from({ length: 10 }).map(() => {\n\t\t\tconst laserMaterial = new SpriteMaterial({\n\t\t\t\tmap: texture,\n\t\t\t\talphaMap: texture,\n\t\t\t\tblending: AdditiveBlending,\n\t\t\t\tcolor: 0xffffff,\n\t\t\t});\n\t\t\tconst sprite = new Sprite(laserMaterial);\n\t\t\tsprite.visible = false;\n\t\t\treturn sprite;\n\t\t})\n\t);\n\tfor (const bullet of bullets) {\n\t\tbullet.scale.set(8, 8, 1);\n\t\tscene.add(bullet);\n\t\tmovables.add(bullet, new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n\t}\n}\n\nconst timeForBulletToTravelScreenVertically = 1.5; // seconds\nconst shotSpeed = viewportHeightMeters / timeForBulletToTravelScreenVertically;\nconst rotationSpeed = 3.0;\nconst explosionSizeByAsteroidSize = {\n\t[asteroidSizeLarge]: 64,\n\t[asteroidSizeSmall]: 48,\n\t[asteroidSizeSmaller]: 24,\n};\nfunction step(timestampDifference) {\n\tif (!areAnyAsteroidsLeft()) {\n\t\tresetAsteroids(areaBounds);\n\t}\n\n\tif (spaceCraft.visible) {\n\t\tif (keyStates[\"ArrowLeft\"]) {\n\t\t\tmovables.setAngularVelocity(spaceCraft, new Vector3(0, 0, rotationSpeed));\n\t\t} else if (keyStates[\"ArrowRight\"]) {\n\t\t\tmovables.setAngularVelocity(spaceCraft, new Vector3(0, 0, -rotationSpeed));\n\t\t} else {\n\t\t\tmovables.setAngularVelocity(spaceCraft, new Vector3(0, 0, 0));\n\t\t}\n\n\t\tif (keyStates[\"Space\"]) {\n\t\t\tconst position = new Vector3(0, 5, -1);\n\t\t\tposition.applyMatrix4(spaceCraft.matrix);\n\t\t\tfireBullet(position, spaceCraft.rotation.clone());\n\t\t}\n\t}\n\n\tmovables.step(timestampDifference, areaBounds);\n\texplosions.step(timestampDifference);\n\n\tfor (const bullet of bullets.filter(({ visible }) => visible)) {\n\t\t// Detect collisions\n\t\tconst asteroidCollisions = detectBulletCollisions(bullet.position, movables.getVelocity(bullet));\n\t\tif (asteroidCollisions.length) {\n\t\t\t// Put bullet back in gun\n\t\t\tbullet.position.set(0, 0, 0);\n\t\t\tbullet.visible = false;\n\t\t\tmovables.setVelocity(bullet, new Vector3(0, 0, 0));\n\t\t}\n\t\tfor (const { object } of asteroidCollisions) {\n\t\t\tconst asteroidSize = explodeAsteroid(object, movables);\n\t\t\tconst explosionPosition = object.position.clone();\n\t\t\texplosionPosition.setZ(10);\n\t\t\texplosions.explode(explosionPosition, explosionSizeByAsteroidSize[asteroidSize]);\n\t\t}\n\t}\n\n\tif (spaceCraft.visible && detectSpaceCraftCollision(spaceCraft.position)) {\n\t\texplosions.explode(spaceCraft.position, 32);\n\t\tspaceCraft.visible = false;\n\t}\n}\n\nconst keyStates = {};\nwindow.document.addEventListener(\"keydown\", (event) => {\n\tkeyStates[event.code] = true;\n});\nwindow.document.addEventListener(\"keyup\", (event) => {\n\tkeyStates[event.code] = false;\n});\n\nconst whiteLight = new DirectionalLight(0xffffff, 1);\nwhiteLight.position.set(1, 1, 2);\nscene.add(whiteLight);\n\nconst orangeLight = new DirectionalLight(0xff7700, 0.5);\norangeLight.position.set(1, -2, 0.5);\nscene.add(orangeLight);\n\nconst blueLight = new DirectionalLight(0x0077ff, 0.5);\nblueLight.position.set(-1, 1, 0.5);\nscene.add(blueLight);\n\n// Main loop\nlet lastTimestamp;\nconst maxStepSizeMs = 10;\nconst maxTotalStepsMs = 100; // Just let it slow down so it can catch up\nfunction animate(timestamp) {\n\tconst timestampDifference = Math.min(timestamp - lastTimestamp, maxTotalStepsMs);\n\trequestAnimationFrame(animate);\n\tif (!spaceCraft) {\n\t\t// Wait for assets to load.\n\t\treturn;\n\t}\n\n\tif (lastTimestamp) {\n\t\tlet remainingStepMs = timestampDifference;\n\t\twhile (remainingStepMs > 0) {\n\t\t\tconst stepMs = Math.min(maxStepSizeMs, remainingStepMs);\n\t\t\tstep(stepMs / 1000);\n\t\t\tremainingStepMs -= stepMs;\n\t\t}\n\t}\n\trenderer.render(scene, camera);\n\tupdateStats();\n\tlastTimestamp = timestamp;\n}\nanimate();\n\nlet nextBulletIndex = 0;\nlet isCoolingDown = false;\n\n// Avoid pushing up sounds for now and annoying myself with the same noise over and over\n// const audio = null;\nconst audio = new Audio(\"./assets/audio/laser-noise-2.wav\");\nfunction fireBullet(position, rotation) {\n\tif (isCoolingDown) {\n\t\treturn;\n\t}\n\tisCoolingDown = true;\n\tsetTimeout(() => {\n\t\tisCoolingDown = false;\n\t}, 250);\n\n\tconst velocity = new Vector3(0, shotSpeed, 0);\n\tvelocity.applyEuler(rotation);\n\n\tbullets[nextBulletIndex].position.copy(position);\n\tbullets[nextBulletIndex].material.rotation = rotation.z;\n\tbullets[nextBulletIndex].visible = true;\n\tmovables.setVelocity(bullets[nextBulletIndex], velocity);\n\n\tnextBulletIndex = (nextBulletIndex + 1) % bullets.length;\n\tif (audio) {\n\t\taudio.pause();\n\t\taudio.currentTime = 0;\n\t\taudio.play();\n\t}\n}\n\nfunction resizeWindow() {\n\tconst height = window.innerHeight;\n\tconst width = window.innerHeight * aspectRatio;\n\trenderer.setSize(width, height);\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n}\nresizeWindow();\nwindow.addEventListener(\"resize\", resizeWindow);\n","import Stats from \"stats-js\";\n\nconst stats = new Stats();\nstats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n\nexport function updateStats() {\n\tstats.update();\n}\n\nlet showStats = false;\nexport function toggleStats() {\n\tshowStats = !showStats;\n\tif (showStats) {\n\t\tdocument.body.appendChild(stats.dom);\n\t} else {\n\t\tstats.dom.remove();\n\t}\n}\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.Stats=t()}(this,function(){\"use strict\";var c=function(){var n=0,l=document.createElement(\"div\");function e(e){return l.appendChild(e.dom),e}function t(e){for(var t=0;t<l.children.length;t++)l.children[t].style.display=t===e?\"block\":\"none\";n=e}l.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\",l.addEventListener(\"click\",function(e){e.preventDefault(),t(++n%l.children.length)},!1);var i=(performance||Date).now(),a=i,o=0,f=e(new c.Panel(\"FPS\",\"#0ff\",\"#002\")),r=e(new c.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var d=e(new c.Panel(\"MB\",\"#f08\",\"#201\"));return t(0),{REVISION:16,dom:l,addPanel:e,showPanel:t,begin:function(){i=(performance||Date).now()},end:function(){o++;var e=(performance||Date).now();if(r.update(e-i,200),a+1e3<=e&&(f.update(1e3*o/(e-a),100),a=e,o=0,d)){var t=performance.memory;d.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:l,setMode:t}};return c.Panel=function(n,l,i){var a=1/0,o=0,f=Math.round,r=f(window.devicePixelRatio||1),d=80*r,e=48*r,c=3*r,p=2*r,u=3*r,s=15*r,m=74*r,h=30*r,y=document.createElement(\"canvas\");y.width=d,y.height=e,y.style.cssText=\"width:80px;height:48px\";var v=y.getContext(\"2d\");return v.font=\"bold \"+9*r+\"px Helvetica,Arial,sans-serif\",v.textBaseline=\"top\",v.fillStyle=i,v.fillRect(0,0,d,e),v.fillStyle=l,v.fillText(n,c,p),v.fillRect(u,s,m,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u,s,m,h),{dom:y,update:function(e,t){a=Math.min(a,e),o=Math.max(o,e),v.fillStyle=i,v.globalAlpha=1,v.fillRect(0,0,d,s),v.fillStyle=l,v.fillText(f(e)+\" \"+n+\" (\"+f(a)+\"-\"+f(o)+\")\",c,p),v.drawImage(y,u+r,s,m-r,h,u,s,m-r,h),v.fillRect(u+m-r,s,r,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u+m-r,s,r,f((1-e/t)*h))}}},c});\n","export class Movables {\n\t#movables = new Map();\n\n\tadd(object3d, velocity, angularVelocity, shouldWrap = false) {\n\t\tif (!object3d) {\n\t\t\tthrow new Error(\"object3d parameter is required\");\n\t\t}\n\t\tif (!velocity) {\n\t\t\tthrow new Error(\"velocity parameter is required\");\n\t\t}\n\t\tif (!angularVelocity) {\n\t\t\tthrow new Error(\"angularVelocity parameter is required\");\n\t\t}\n\t\tthis.#movables.set(object3d, { velocity, angularVelocity, shouldWrap });\n\t}\n\n\tsetAngularVelocity(object3d, angularVelocity) {\n\t\tconst movable = this.#movables.get(object3d);\n\t\tif (!movable) {\n\t\t\tconsole.error(\"Unknown object\", object3d);\n\t\t\tthrow new Error(\"Unknown object\");\n\t\t}\n\t\tthis.#movables.set(object3d, { ...movable, angularVelocity });\n\t}\n\n\tsetVelocity(object3d, velocity) {\n\t\tconst movable = this.#movables.get(object3d);\n\t\tif (!movable) {\n\t\t\tconsole.error(\"Unknown object\", object3d);\n\t\t\tthrow new Error(\"Unknown object\");\n\t\t}\n\t\tthis.#movables.set(object3d, { ...movable, velocity });\n\t}\n\n\tgetVelocity(object3d) {\n\t\tconst movable = this.#movables.get(object3d);\n\t\tif (!movable) {\n\t\t\tconsole.error(\"Unknown object\", object3d);\n\t\t\tthrow new Error(\"Unknown object\");\n\t\t}\n\t\treturn movable.velocity.clone();\n\t}\n\n\tstep(timestampDifference, areaBounds) {\n\t\tconst { top, bottom, left, right } = areaBounds;\n\t\tfor (const [object3d, { velocity, angularVelocity, shouldWrap }] of this.#movables) {\n\t\t\tobject3d.rotateX(timestampDifference * angularVelocity.x);\n\t\t\tobject3d.rotateY(timestampDifference * angularVelocity.y);\n\t\t\tobject3d.rotateZ(timestampDifference * angularVelocity.z);\n\n\t\t\tconst positionDelta = velocity.clone().multiplyScalar(timestampDifference);\n\t\t\tobject3d.position.add(positionDelta);\n\n\t\t\tif (shouldWrap) {\n\t\t\t\tif (object3d.position.x > right) {\n\t\t\t\t\tobject3d.position.setX(left);\n\t\t\t\t} else if (object3d.position.x < left) {\n\t\t\t\t\tobject3d.position.setX(right);\n\t\t\t\t} else if (object3d.position.y > top) {\n\t\t\t\t\tobject3d.position.setY(bottom);\n\t\t\t\t} else if (object3d.position.y < bottom) {\n\t\t\t\t\tobject3d.position.setY(top);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Sprite, RepeatWrapping, SpriteMaterial, AdditiveBlending } from \"three\";\n\nconst spriteCount = 20;\n// https://sfxr.me/#7BMHBGBrvPrKMz7vdnH2arTppbTGtPrik6ypYCJazirRsGBVeid2uaLtz37CSy69ZJjGJ7C8h9NjU1LRXtL5tgW9vaPUQvE92L3q7UfV4TSbUF1N2G3urTRqZ\n// https://sfxr.me/#7BMHBGBrvPrKMz7vdnH2arSxENYbWUNps8g7nqouBB9smtxAq2PYYsVoa5sjrzVZo7VNpDFNrSQTNtinkTFut1aGJnuigdFUTrtf7aaih5chRw6UQ5bBqVNz3\nconst explosionAudios = [\n\tnew Audio(\"./assets/audio/explosion-3.wav\"),\n\tnew Audio(\"./assets/audio/explosion-4.wav\"),\n\tnew Audio(\"./assets/audio/explosion-3.wav\"),\n\tnew Audio(\"./assets/audio/explosion-4.wav\"),\n];\nexport class Explosions {\n\t#sprites = [];\n\t#nextSpriteIndex = 0;\n\n\tinitialize(scene, explosionTexture, fps, horizontalTileCount, verticalTileCount) {\n\t\tthis.#sprites = Array.from({ length: spriteCount }).map(\n\t\t\t() => new AnimatedSprite(explosionTexture, fps, horizontalTileCount, verticalTileCount)\n\t\t);\n\t\tfor (const sprite of this.#sprites) {\n\t\t\tconst threeSprite = sprite.getObject3d();\n\t\t\tthreeSprite.visible = false;\n\t\t\tscene.add(threeSprite);\n\t\t}\n\t}\n\n\texplode(position, scale) {\n\t\tconst sprite = this.#sprites[this.#nextSpriteIndex % this.#sprites.length];\n\t\tsprite.restart();\n\t\tconst threeJsSprite = sprite.getObject3d();\n\t\tthreeJsSprite.position.copy(position);\n\t\tthreeJsSprite.scale.set(scale, scale, 1);\n\t\tthis.#nextSpriteIndex++;\n\t\texplosionAudios[this.#nextSpriteIndex % explosionAudios.length].play();\n\t}\n\n\tstep(deltaSeconds) {\n\t\tfor (const sprite of this.#sprites) {\n\t\t\tsprite.step(deltaSeconds);\n\t\t}\n\t}\n}\n\nclass AnimatedSprite {\n\t#elapsedTime = 0;\n\t#horizontalTileCount;\n\t#verticalTileCount;\n\t#sprite;\n\t#fps = 0;\n\n\tconstructor(spriteSheetTexture, fps, horizontalTileCount, verticalTileCount) {\n\t\tthis.#fps = fps;\n\t\tconst texture = spriteSheetTexture.clone();\n\t\ttexture.needsUpdate = true;\n\t\ttexture.wrapS = texture.wrapT = RepeatWrapping;\n\t\tthis.#horizontalTileCount = horizontalTileCount;\n\t\tthis.#verticalTileCount = verticalTileCount;\n\t\ttexture.repeat.set(1 / this.#horizontalTileCount, 1 / this.#verticalTileCount);\n\n\t\tconst spriteMaterial = new SpriteMaterial({\n\t\t\tmap: texture,\n\t\t\talphaMap: texture,\n\t\t\tblending: AdditiveBlending,\n\t\t\tcolor: 0xffffff,\n\t\t});\n\t\tthis.#sprite = new Sprite(spriteMaterial);\n\t}\n\n\tgetObject3d() {\n\t\treturn this.#sprite;\n\t}\n\n\trestart() {\n\t\tthis.#elapsedTime = 0;\n\t\tthis.#sprite.visible = true;\n\t}\n\n\tstep(deltaSeconds) {\n\t\tif (!this.#sprite.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#elapsedTime += deltaSeconds;\n\n\t\tconst currentFrame = Math.floor(this.#elapsedTime * this.#fps);\n\t\tconst frameCount = this.#verticalTileCount * this.#horizontalTileCount;\n\t\tif (currentFrame >= frameCount) {\n\t\t\tthis.#sprite.visible = false;\n\t\t} else {\n\t\t\tconst horizontalTileIndex = currentFrame % this.#horizontalTileCount;\n\t\t\tconst verticalTileIndex = Math.floor(currentFrame / this.#horizontalTileCount);\n\t\t\tconst texture = this.#sprite.material.map;\n\t\t\ttexture.offset.setX(horizontalTileIndex / this.#horizontalTileCount);\n\t\t\ttexture.offset.setY(-(1 + verticalTileIndex) / this.#verticalTileCount);\n\t\t}\n\t}\n}\n","import { Raycaster, Vector3 } from \"three\";\n\nconst asteroidRadius = 10;\n\nlet asteroids = [];\n\nlet largeAsteroids = [];\n\nlet currentSmallAsteroid = 0;\nlet smallAsteroids = [];\n\nlet currentSmallerAsteroid = 0;\nlet smallerAsteroids = [];\nexport function createAsteroids(asteroidGltf, movables, scene) {\n\tconst largeAsteroidCount = 6;\n\tconst smallAsteroidCount = largeAsteroidCount * 2;\n\tconst smallerAsteroidCount = smallAsteroidCount * 2;\n\tconst largeAsteroidMeshes = asteroidGltf.scene.children.filter(({ userData }) =>\n\t\tuserData.name.startsWith(\"asteroid-large-\")\n\t);\n\tconst smallAsteroidMeshes = asteroidGltf.scene.children.filter(({ userData }) =>\n\t\tuserData.name.startsWith(\"asteroid-small-\")\n\t);\n\tconst smallerAsteroidMeshes = asteroidGltf.scene.children.filter(({ userData }) =>\n\t\tuserData.name.startsWith(\"asteroid-smaller-\")\n\t);\n\tlargeAsteroids = Array.from({ length: largeAsteroidCount }).map((_, index) => {\n\t\tconst asteroidMeshCopy = largeAsteroidMeshes[index % largeAsteroidMeshes.length].clone();\n\n\t\tscene.add(asteroidMeshCopy);\n\t\tasteroidMeshCopy.visible = false;\n\t\tconst velocity = new Vector3(20, 0, 0);\n\t\tvelocity.applyAxisAngle(new Vector3(0, 0, 1), 2 * Math.PI * Math.random());\n\t\tmovables.add(\n\t\t\tasteroidMeshCopy,\n\t\t\tvelocity,\n\t\t\tnew Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1),\n\t\t\ttrue\n\t\t);\n\t\treturn asteroidMeshCopy;\n\t});\n\tsmallAsteroids = Array.from({ length: smallAsteroidCount }).map((_, index) => {\n\t\tconst asteroidMeshCopy = smallAsteroidMeshes[index % smallAsteroidMeshes.length].clone();\n\n\t\tscene.add(asteroidMeshCopy);\n\t\tasteroidMeshCopy.visible = false;\n\t\tmovables.add(\n\t\t\tasteroidMeshCopy,\n\t\t\tnew Vector3(0, 0, 0),\n\t\t\tnew Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1),\n\t\t\ttrue\n\t\t);\n\t\treturn asteroidMeshCopy;\n\t});\n\tsmallerAsteroids = Array.from({ length: smallerAsteroidCount }).map((_, index) => {\n\t\tconst asteroidMeshCopy = smallerAsteroidMeshes[index % smallerAsteroidMeshes.length].clone();\n\n\t\tscene.add(asteroidMeshCopy);\n\t\tasteroidMeshCopy.visible = false;\n\t\tmovables.add(\n\t\t\tasteroidMeshCopy,\n\t\t\tnew Vector3(0, 0, 0),\n\t\t\tnew Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1),\n\t\t\ttrue\n\t\t);\n\t\treturn asteroidMeshCopy;\n\t});\n\tasteroids = [...smallerAsteroids, ...smallAsteroids, ...largeAsteroids];\n}\n\nexport function areAnyAsteroidsLeft() {\n\treturn asteroids.some((asteroid) => asteroid.visible);\n}\n\nexport function resetAsteroids(areaBounds) {\n\tconst gameAreaWidthMeters = areaBounds.right - areaBounds.left;\n\tconst gameAreaHeightMeters = areaBounds.top - areaBounds.bottom;\n\tfor (const asteroid of largeAsteroids) {\n\t\tasteroid.visible = true;\n\t\tconst startLocations = [\n\t\t\t// Top of screen\n\t\t\t[(Math.random() - 0.5) * gameAreaWidthMeters, areaBounds.top],\n\t\t\t// Bottom of screen\n\t\t\t[(Math.random() - 0.5) * gameAreaWidthMeters, areaBounds.bottom],\n\t\t\t// Left of screen\n\t\t\t[areaBounds.left, (Math.random() - 0.5) * gameAreaHeightMeters],\n\t\t\t// Right of screen\n\t\t\t[areaBounds.right, (Math.random() - 0.5) * gameAreaHeightMeters],\n\t\t];\n\t\tconst startLocation = startLocations[Math.floor(Math.random() * startLocations.length)];\n\t\tasteroid.position.set(startLocation[0], startLocation[1], 0);\n\t}\n}\n\nexport const asteroidSizeLarge = 0;\nexport const asteroidSizeSmall = 1;\nexport const asteroidSizeSmaller = 2;\nexport function explodeAsteroid(asteroid, movables) {\n\tasteroid.visible = false;\n\tif (largeAsteroids.includes(asteroid)) {\n\t\temitSmallAsteroid(asteroid.position.clone(), movables);\n\t\temitSmallAsteroid(asteroid.position.clone(), movables);\n\t\treturn asteroidSizeLarge;\n\t} else if (smallAsteroids.includes(asteroid)) {\n\t\temitSmallerAsteroid(asteroid.position.clone(), movables);\n\t\temitSmallerAsteroid(asteroid.position.clone(), movables);\n\t\treturn asteroidSizeSmall;\n\t}\n\treturn asteroidSizeSmaller;\n}\n\nexport function detectSpaceCraftCollision(spaceCraftPosition) {\n\tfor (const asteroid of asteroids.filter(({ visible }) => visible)) {\n\t\tif (spaceCraftPosition.distanceTo(asteroid.position) < asteroidRadius) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nconst maxAsteroidSize = 20;\nexport function detectBulletCollisions(bulletPosition, bulletVelocity) {\n\tconst visibleAsteroids = asteroids.filter(({ visible }) => visible);\n\tconst nearAsteroids = visibleAsteroids.filter(\n\t\t({ position }) => bulletPosition.distanceTo(position) < maxAsteroidSize\n\t);\n\tconst direction = bulletVelocity.clone().normalize();\n\tconst origin = new Vector3().subVectors(bulletPosition, direction);\n\tconst ray = new Raycaster(origin, direction, 0, 2);\n\tconst collisionResults = ray.intersectObjects(nearAsteroids);\n\treturn collisionResults;\n}\n\nfunction emitSmallAsteroid(position, movables) {\n\tconst asteroid = smallAsteroids[currentSmallAsteroid % smallAsteroids.length];\n\tcurrentSmallAsteroid++;\n\tasteroid.visible = true;\n\tasteroid.position.copy(position);\n\tconst velocity = new Vector3(30, 0, 0);\n\tvelocity.applyAxisAngle(new Vector3(0, 0, 1), 2 * Math.PI * Math.random());\n\tmovables.setVelocity(asteroid, velocity);\n}\n\nfunction emitSmallerAsteroid(position, movables) {\n\tconst asteroid = smallerAsteroids[currentSmallerAsteroid % smallerAsteroids.length];\n\tcurrentSmallerAsteroid++;\n\tasteroid.visible = true;\n\tasteroid.position.copy(position);\n\tconst velocity = new Vector3(40, 0, 0);\n\tvelocity.applyAxisAngle(new Vector3(0, 0, 1), 2 * Math.PI * Math.random());\n\tmovables.setVelocity(asteroid, velocity);\n}\n"],"names":["$fed252b883bd88fa$var$lastTimestamp","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$eq1Fs","$a07f7f9dd384c0a2$exports","t","c","n","l","document","createElement","e","appendChild","dom","children","length","style","display","cssText","addEventListener","preventDefault","i","performance","Date","now","a","o","f","Panel","r","memory","d","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Math","round","devicePixelRatio","p","u","s","m","h","y","width","height","v","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","min","max","drawImage","$a8fffecac97013f4$var$stats","$parcel$interopDefault","__esModule","default","$a8fffecac97013f4$var$showStats","$kXZ5p","$dJCPM","$858725d5e2ef9b1d$export$2b073417fbba3848","movables","Map","add","object3d","velocity","angularVelocity","shouldWrap","set","setAngularVelocity","movable","get","console","error","setVelocity","getVelocity","clone","step","timestampDifference","areaBounds","top","bottom","left","right","rotateX","x","rotateY","rotateZ","z","positionDelta","multiplyScalar","position","setX","setY","$05d2cb2914b1a9ca$var$explosionAudios","Audio","$05d2cb2914b1a9ca$var$AnimatedSprite","elapsedTime","horizontalTileCount","verticalTileCount","sprite","fps","constructor","spriteSheetTexture","texture","needsUpdate","wrapS","wrapT","RepeatWrapping","repeat","spriteMaterial","SpriteMaterial","map","alphaMap","blending","AdditiveBlending","color","Sprite","getObject3d","restart","visible","deltaSeconds","currentFrame","floor","frameCount","horizontalTileIndex","verticalTileIndex","material","offset","$65c65aaebef2a5cf$var$asteroids","$65c65aaebef2a5cf$var$largeAsteroids","$65c65aaebef2a5cf$var$currentSmallAsteroid","$65c65aaebef2a5cf$var$smallAsteroids","$65c65aaebef2a5cf$var$currentSmallerAsteroid","$65c65aaebef2a5cf$var$smallerAsteroids","$65c65aaebef2a5cf$export$720cadecf6b2b14c","gameAreaWidthMeters","gameAreaHeightMeters","asteroid","startLocations","random","startLocation","$65c65aaebef2a5cf$var$emitSmallAsteroid","copy","Vector3","applyAxisAngle","PI","$65c65aaebef2a5cf$var$emitSmallerAsteroid","$fed252b883bd88fa$var$aspectRatio","$fed252b883bd88fa$var$renderer","WebGLRenderer","antialias","outputEncoding","sRGBEncoding","setClearColor","setPixelRatio","body","$fed252b883bd88fa$var$scene","Scene","$fed252b883bd88fa$var$movables","$fed252b883bd88fa$var$explosions","sprites","nextSpriteIndex","initialize","scene","explosionTexture","Array","from","threeSprite","explode","scale","threeJsSprite","play","$fed252b883bd88fa$var$viewportWidthMeters","$fed252b883bd88fa$var$camera","OrthographicCamera","$fed252b883bd88fa$var$viewportHeightMeters","$fed252b883bd88fa$var$areaBounds","$fed252b883bd88fa$var$gltfLoader","GLTFLoader","setPath","$fed252b883bd88fa$var$promisifiedGltfLoad","path","Promise","resolve","reject","load","$fed252b883bd88fa$var$textureLoader","TextureLoader","$fed252b883bd88fa$var$promisifiedTextureLoad","$fed252b883bd88fa$var$spaceCraft","spaceCraftGltf","rockGltf","laserTexture","all","asteroidGltf","largeAsteroidMeshes","filter","userData","name","startsWith","smallAsteroidMeshes","smallerAsteroidMeshes","_","index","asteroidMeshCopy","largeAsteroidCount","smallAsteroidCount","$fed252b883bd88fa$var$initializeBullets","bullet","$fed252b883bd88fa$var$bullets","push","laserMaterial","$fed252b883bd88fa$var$guiParams","debugLights","light0","light1","light2","animateLights","model","$fed252b883bd88fa$var$gui","GUI","onChange","value","$fed252b883bd88fa$var$whiteLight","$fed252b883bd88fa$var$blueLight","$fed252b883bd88fa$var$orangeLight","remove","$fed252b883bd88fa$var$shotSpeed","$fed252b883bd88fa$var$explosionSizeByAsteroidSize","$fed252b883bd88fa$var$keyStates","event","DirectionalLight","$fed252b883bd88fa$var$animate","timestamp","requestAnimationFrame","remainingStepMs","stepMs","$fed252b883bd88fa$var$step","some","applyMatrix4","matrix","$fed252b883bd88fa$var$fireBullet","rotation","$fed252b883bd88fa$var$isCoolingDown","setTimeout","applyEuler","$fed252b883bd88fa$var$nextBulletIndex","$fed252b883bd88fa$var$audio","pause","currentTime","asteroidCollisions","bulletPosition","bulletVelocity","visibleAsteroids","nearAsteroids","distanceTo","direction","normalize","origin","subVectors","ray","Raycaster","collisionResults","intersectObjects","object","asteroidSize","includes","explosionPosition","setZ","spaceCraftPosition","render","$fed252b883bd88fa$var$resizeWindow","innerHeight","setSize","aspect","innerWidth","updateProjectionMatrix"],"version":3,"file":"asteroids.53e74649.js.map"}